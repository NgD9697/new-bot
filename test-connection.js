import dotenv from "dotenv";
import fetch from "node-fetch";

dotenv.config();

async function testConnection() {
  const token = process.env.BOT_TOKEN;

  if (!token) {
    console.error("‚ùå Kh√¥ng t√¨m th·∫•y BOT_TOKEN trong file .env");
    return;
  }

  console.log("üîß ƒêang test k·∫øt n·ªëi ƒë·∫øn Telegram API...");
  console.log("üìù Token:", token.substring(0, 10) + "...");

  try {
    // Test 1: Ki·ªÉm tra bot info
    console.log("\nüìä Test 1: Ki·ªÉm tra th√¥ng tin bot...");
    const botInfoResponse = await fetch(
      `https://api.telegram.org/bot${token}/getMe`,
      {
        timeout: 10000,
      }
    );

    if (botInfoResponse.ok) {
      const botInfo = await botInfoResponse.json();
      console.log("‚úÖ Bot info:", botInfo);
    } else {
      console.error(
        "‚ùå L·ªói bot info:",
        botInfoResponse.status,
        botInfoResponse.statusText
      );
    }

    // Test 2: Ki·ªÉm tra webhook info
    console.log("\nüìä Test 2: Ki·ªÉm tra webhook...");
    const webhookResponse = await fetch(
      `https://api.telegram.org/bot${token}/getWebhookInfo`,
      {
        timeout: 10000,
      }
    );

    if (webhookResponse.ok) {
      const webhookInfo = await webhookResponse.json();
      console.log("‚úÖ Webhook info:", webhookInfo);
    } else {
      console.error(
        "‚ùå L·ªói webhook:",
        webhookResponse.status,
        webhookResponse.statusText
      );
    }

    // Test 3: Ki·ªÉm tra updates
    console.log("\nüìä Test 3: Ki·ªÉm tra updates...");
    const updatesResponse = await fetch(
      `https://api.telegram.org/bot${token}/getUpdates`,
      {
        timeout: 10000,
      }
    );

    if (updatesResponse.ok) {
      const updates = await updatesResponse.json();
      console.log("‚úÖ Updates:", updates);
    } else {
      console.error(
        "‚ùå L·ªói updates:",
        updatesResponse.status,
        updatesResponse.statusText
      );
    }
  } catch (error) {
    console.error("‚ùå L·ªói k·∫øt n·ªëi:", error.message);

    if (error.code === "ETIMEDOUT") {
      console.log("üí° G·ª£i √Ω: Ki·ªÉm tra k·∫øt n·ªëi m·∫°ng ho·∫∑c th·ª≠ d√πng VPN");
    } else if (error.code === "ENOTFOUND") {
      console.log("üí° G·ª£i √Ω: Ki·ªÉm tra DNS ho·∫∑c k·∫øt n·ªëi internet");
    }
  }
}

testConnection();
